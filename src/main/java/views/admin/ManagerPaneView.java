package views.admin;

import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import models.Model;
import utils.ErrorPopup;
import utils.IconManager;

/**
 *
 * @author P51
 */
public abstract class ManagerPaneView<T extends Model> extends JPanel {

    protected DefaultTableModel tableModel = new DefaultTableModel();
    private IconManager im = new IconManager();
    private ArrayList<T> tableData = new ArrayList<>();

    public ManagerPaneView() {
        initComponents();
        dataTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        dataTable.getTableHeader().setOpaque(false);
        dataTable.getTableHeader().setBackground(new Color(51, 175, 255));
        dataTable.getTableHeader().setForeground(new Color(255, 255, 255));
        ((DefaultTableCellRenderer) dataTable.getTableHeader().getDefaultRenderer())
                .setHorizontalAlignment(JLabel.LEFT);
        dataTable.setAutoCreateRowSorter(true);
        addButton.setIcon(im.getIcon("add_25px.png"));
        editButton.setIcon(im.getIcon("edit_25px.png"));
        delButton.setIcon(im.getIcon("delete_25px.png"));
        syncButton.setIcon(im.getIcon("sync_25px.png"));
        dataTable.setModel(tableModel);
        addButton.putClientProperty("JButton.buttonType", "roundRect");
        delButton.putClientProperty("JButton.buttonType", "roundRect");
        editButton.putClientProperty("JButton.buttonType", "roundRect");
        syncButton.putClientProperty("JButton.buttonType", "roundRect");
    }

    public JButton getAddButton() {
        return addButton;
    }

    public JComboBox<String> getComboSearchField() {
        return comboSearchField;
    }

    public JTable getDataTable() {
        return dataTable;
    }

    public JButton getDelButton() {
        return delButton;
    }

    public JButton getEditButton() {
        return editButton;
    }

    public JTextField getSearchTxt() {
        return searchTxt;
    }

    public JButton getSyncButton() {
        return syncButton;
    }

    

    public void showError(String message) {
        ErrorPopup.show(new Exception(message));
    }

    public void showError(Exception e) {
        ErrorPopup.show(e);
    }

    public void showMessage(String message) {
        JOptionPane.showMessageDialog(null, message);
    }

    //Lấy các nút để set event
    public JButton getBtnAdd() {
        return addButton;
    }

    public JButton getBtnDelete() {
        return delButton;
    }

    public JButton getBtnEdit() {
        return editButton;
    }

    public JButton getBtnSync() {
        return syncButton;
    }

    public ArrayList<T> getTableData() {
        return tableData;
    }

    public void setTableData(ArrayList<T> tableData) {
        this.tableData = tableData;
        renderTable();
    }

    public JTable getTblData() {
        return dataTable;
    }

    // Lấy id các hàng đc chọn
    public int[] getSelectedIds() {

        int selectedRows[] = dataTable.getSelectedRows();
        int selectedIds[] = new int[selectedRows.length];
        for (int i = 0; i < selectedRows.length; i++) {
            int selectedRow = selectedRows[i];
            int id = (int) dataTable.getValueAt(selectedRow, 0);
            selectedIds[i] = id;
        }
        return selectedIds;
    }

    // Lấy id hàng chọn đầu
    public int getSelectedId() {

        int selectedRow = dataTable.getSelectedRow();
        if (selectedRow < 0) {
            return -1;
        }
        int id = (int) dataTable.getValueAt(selectedRow, 0);
        return id;
    }

    // render item to show on the table
    public void renderTable() {
        tableModel.setNumRows(0);
        try {
            System.out.println(tableData.size());
            for (T item : tableData) {
                System.out.println(item);
                tableModel.addRow(item.toRowTable());
            }
        } catch (Exception e) {
            showError(e);
        }
    }

    public abstract void setTableModel();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        delButton = new javax.swing.JButton();
        syncButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        searchTxt = new javax.swing.JTextField();
        comboSearchField = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 102));
        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setPreferredSize(new java.awt.Dimension(1008, 680));
        setLayout(new java.awt.BorderLayout());

        jScrollPane1.setOpaque(false);

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataTable.setFocusable(false);
        dataTable.setRowHeight(30);
        dataTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(dataTable);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        delButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        delButton.setText("Xóa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 15, 5);
        jPanel1.add(delButton, gridBagConstraints);

        syncButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        syncButton.setText("Cập nhật");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 15, 5);
        jPanel1.add(syncButton, gridBagConstraints);

        editButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editButton.setText("Sửa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 15, 5);
        jPanel1.add(editButton, gridBagConstraints);

        addButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addButton.setText("Thêm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 15, 5);
        jPanel1.add(addButton, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.LINE_END);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 10));
        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(1008, 40));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        searchTxt.setText("Search");
        searchTxt.setAlignmentX(0.0F);
        searchTxt.setAlignmentY(0.0F);
        searchTxt.setBorder(null);
        searchTxt.setPreferredSize(new java.awt.Dimension(200, 25));
        jPanel2.add(searchTxt);

        comboSearchField.setMinimumSize(new java.awt.Dimension(100, 25));
        comboSearchField.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel2.add(comboSearchField);

        add(jPanel2, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox<String> comboSearchField;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton delButton;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JButton syncButton;
    // End of variables declaration//GEN-END:variables
}
